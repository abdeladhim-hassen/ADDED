// <auto-generated />
using System;
using ADDED.API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ADDED.API.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ADDED.API.Models.Anomalie", b =>
                {
                    b.Property<string>("IdAno")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LibAno");

                    b.HasKey("IdAno");

                    b.ToTable("Anomalies");
                });

            modelBuilder.Entity("ADDED.API.Models.Chef", b =>
                {
                    b.Property<int>("IdChef")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodDist");

                    b.Property<string>("MailChef");

                    b.Property<string>("NomChef");

                    b.Property<byte[]>("PasswordHash");

                    b.Property<byte[]>("PasswordSalt");

                    b.Property<string>("PrenomChef");

                    b.Property<int>("TelChef");

                    b.HasKey("IdChef");

                    b.HasIndex("CodDist");

                    b.ToTable("ChefBureau");
                });

            modelBuilder.Entity("ADDED.API.Models.ChoixPlan", b =>
                {
                    b.Property<string>("IdPeriode")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime?>("DatExploi");

                    b.Property<int>("IdChef");

                    b.HasKey("IdPeriode");

                    b.HasIndex("IdChef");

                    b.ToTable("ChoixPlans");
                });

            modelBuilder.Entity("ADDED.API.Models.Compteur", b =>
                {
                    b.Property<int>("IdCtr")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CodeCtr");

                    b.Property<int?>("DiamCtr");

                    b.Property<int>("IdOrdr");

                    b.Property<string>("NumCtr");

                    b.HasKey("IdCtr");

                    b.HasIndex("IdOrdr");

                    b.ToTable("Compteurs");
                });

            modelBuilder.Entity("ADDED.API.Models.Creation", b =>
                {
                    b.Property<int>("IdCrea")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreaAdressse");

                    b.Property<decimal?>("CreaIndex")
                        .HasColumnType("decimal(6,0)");

                    b.Property<string>("CreaNumCtr");

                    b.Property<int?>("CreaOrdr");

                    b.Property<int?>("CreaTour");

                    b.Property<string>("IdAno");

                    b.HasKey("IdCrea");

                    b.HasIndex("IdAno");

                    b.ToTable("Creations");
                });

            modelBuilder.Entity("ADDED.API.Models.Detaille", b =>
                {
                    b.Property<int>("IdOrdr")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdrAbn");

                    b.Property<decimal?>("AncienIndex")
                        .HasColumnType("decimal(6,0)");

                    b.Property<int?>("Categ");

                    b.Property<int?>("CodeUsage");

                    b.Property<int>("IdTour");

                    b.Property<byte?>("Marche");

                    b.Property<string>("NomAbn");

                    b.Property<int?>("Ordre");

                    b.Property<string>("Police");

                    b.Property<byte?>("Resilie");

                    b.HasKey("IdOrdr");

                    b.HasIndex("IdTour");

                    b.ToTable("Detailles");
                });

            modelBuilder.Entity("ADDED.API.Models.District", b =>
                {
                    b.Property<int>("CodDist")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdrDist");

                    b.Property<string>("MailDist");

                    b.Property<string>("NomDist");

                    b.Property<string>("TelDist");

                    b.HasKey("CodDist");

                    b.ToTable("Districts");
                });

            modelBuilder.Entity("ADDED.API.Models.Historique", b =>
                {
                    b.Property<int>("IdHisto")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AnHisto");

                    b.Property<decimal?>("ConsHisto")
                        .HasColumnType("decimal(6,0)");

                    b.Property<int>("IdOrdr");

                    b.Property<int?>("TrimHisto");

                    b.HasKey("IdHisto");

                    b.HasIndex("IdOrdr");

                    b.ToTable("Historiques");
                });

            modelBuilder.Entity("ADDED.API.Models.Index", b =>
                {
                    b.Property<int>("IdIndex")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatIndex");

                    b.Property<int>("IdOrdr");

                    b.Property<decimal?>("NouvIndex")
                        .HasColumnType("decimal(6,0)");

                    b.Property<string>("Observ");

                    b.HasKey("IdIndex");

                    b.HasIndex("IdOrdr");

                    b.ToTable("Indexs");
                });

            modelBuilder.Entity("ADDED.API.Models.ListAnomalie", b =>
                {
                    b.Property<int>("ListAno")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("IdAno");

                    b.Property<int>("IdOrdr");

                    b.HasKey("ListAno");

                    b.HasIndex("IdAno");

                    b.HasIndex("IdOrdr");

                    b.ToTable("ListAnomalies");
                });

            modelBuilder.Entity("ADDED.API.Models.Localite", b =>
                {
                    b.Property<int>("CodLocalite")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodDist");

                    b.Property<string>("LibLocalite");

                    b.Property<string>("TelLocalite");

                    b.HasKey("CodLocalite");

                    b.HasIndex("CodDist");

                    b.ToTable("Localites");
                });

            modelBuilder.Entity("ADDED.API.Models.Portable", b =>
                {
                    b.Property<int>("IdPort")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatAffect");

                    b.Property<int?>("EtatPort");

                    b.Property<int?>("IdReleveur");

                    b.Property<string>("MarquePort");

                    b.HasKey("IdPort");

                    b.HasIndex("IdReleveur")
                        .IsUnique()
                        .HasFilter("[IdReleveur] IS NOT NULL");

                    b.ToTable("Portables");
                });

            modelBuilder.Entity("ADDED.API.Models.Releveur", b =>
                {
                    b.Property<int>("IdReleveur")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CodLocalite");

                    b.Property<string>("TSPPassword");

                    b.Property<string>("TSPUsername");

                    b.HasKey("IdReleveur");

                    b.HasIndex("CodLocalite");

                    b.ToTable("Releveurs");
                });

            modelBuilder.Entity("ADDED.API.Models.Tournee", b =>
                {
                    b.Property<int>("IdTour")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("DatAffect");

                    b.Property<bool?>("Etat");

                    b.Property<int?>("IdChef");

                    b.Property<string>("IdPeriode");

                    b.Property<int?>("IdReleveur");

                    b.Property<int>("Tour");

                    b.HasKey("IdTour");

                    b.HasIndex("IdChef");

                    b.HasIndex("IdPeriode");

                    b.HasIndex("IdReleveur");

                    b.ToTable("Tournees");
                });

            modelBuilder.Entity("ADDED.API.SonedeModels.Base20231", b =>
                {
                    b.Property<int?>("Dist")
                        .HasColumnName("DIST");

                    b.Property<int>("Tou")
                        .HasColumnName("TOU");

                    b.Property<int?>("Ord")
                        .HasColumnName("ORD");

                    b.Property<decimal?>("Aindex")
                        .HasColumnName("AINDEX")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<int?>("Categ")
                        .HasColumnName("CATEG");

                    b.Property<int?>("Codctr")
                        .HasColumnName("CODCTR");

                    b.Property<int?>("Codmarq")
                        .HasColumnName("CODMARQ");

                    b.Property<int?>("Codonan")
                        .HasColumnName("CODONAN");

                    b.Property<int?>("Codonas")
                        .HasColumnName("CODONAS");

                    b.Property<decimal?>("Consmoy")
                        .HasColumnName("CONSMOY")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<string>("Nomadr")
                        .HasColumnName("NOMADR");

                    b.Property<string>("Numctr")
                        .HasColumnName("NUMCTR");

                    b.Property<string>("Pol")
                        .HasColumnName("POL");

                    b.Property<int?>("Posit")
                        .HasColumnName("POSIT");

                    b.Property<decimal?>("Releve")
                        .HasColumnName("RELEVE")
                        .HasColumnType("numeric(6, 0)");

                    b.Property<int?>("Zan")
                        .HasColumnName("ZAN");

                    b.Property<int?>("Zsix")
                        .HasColumnName("ZSIX");

                    b.Property<int?>("Ztier")
                        .HasColumnName("ZTIER");

                    b.Property<int?>("Ztri")
                        .HasColumnName("ZTRI");

                    b.HasKey("Dist", "Tou", "Ord");

                    b.ToTable("BASE20231");
                });

            modelBuilder.Entity("ADDED.API.SonedeModels.Basecptr", b =>
                {
                    b.Property<int>("Dist")
                        .HasColumnName("DIST");

                    b.Property<int>("Tou")
                        .HasColumnName("TOU");

                    b.Property<int>("Ord")
                        .HasColumnName("ORD");

                    b.Property<string>("Cle3")
                        .HasColumnName("CLE3")
                        .HasMaxLength(17);

                    b.Property<int?>("Codctr")
                        .HasColumnName("CODCTR");

                    b.Property<int?>("Codmarq")
                        .HasColumnName("CODMARQ");

                    b.HasKey("Dist", "Tou", "Ord");

                    b.ToTable("BASECPTR");
                });

            modelBuilder.Entity("ADDED.API.SonedeModels.Histo1", b =>
                {
                    b.Property<int>("Zdis")
                        .HasColumnName("ZDIS");

                    b.Property<int>("Ztou")
                        .HasColumnName("ZTOU");

                    b.Property<int>("Zord")
                        .HasColumnName("ZORD");

                    b.Property<int>("Ztrim")
                        .HasColumnName("ZTRIM");

                    b.Property<int>("Zanne")
                        .HasColumnName("ZANNE");

                    b.Property<decimal?>("Zcons")
                        .HasColumnName("ZCONS")
                        .HasColumnType("decimal(6,0)");

                    b.Property<string>("Zpol")
                        .HasColumnName("ZPOL");

                    b.HasKey("Zdis", "Ztou", "Zord", "Ztrim", "Zanne");

                    b.ToTable("HISTO1");
                });

            modelBuilder.Entity("ADDED.API.Models.Chef", b =>
                {
                    b.HasOne("ADDED.API.Models.District", "CodDistNavigation")
                        .WithMany("Chef")
                        .HasForeignKey("CodDist")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.ChoixPlan", b =>
                {
                    b.HasOne("ADDED.API.Models.Chef", "IdChefNavigation")
                        .WithMany("ChoixPlan")
                        .HasForeignKey("IdChef")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Compteur", b =>
                {
                    b.HasOne("ADDED.API.Models.Detaille", "IdOrdrNavigation")
                        .WithMany("Compteur")
                        .HasForeignKey("IdOrdr")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Creation", b =>
                {
                    b.HasOne("ADDED.API.Models.Anomalie", "AnoNavigation")
                        .WithMany("Creation")
                        .HasForeignKey("IdAno");
                });

            modelBuilder.Entity("ADDED.API.Models.Detaille", b =>
                {
                    b.HasOne("ADDED.API.Models.Tournee", "IdTourNavigation")
                        .WithMany("Detaille")
                        .HasForeignKey("IdTour")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Historique", b =>
                {
                    b.HasOne("ADDED.API.Models.Detaille", "IdOrdrNavigation")
                        .WithMany("Historique")
                        .HasForeignKey("IdOrdr")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Index", b =>
                {
                    b.HasOne("ADDED.API.Models.Detaille", "IdOrdrNavigation")
                        .WithMany("Index")
                        .HasForeignKey("IdOrdr")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.ListAnomalie", b =>
                {
                    b.HasOne("ADDED.API.Models.Anomalie", "IdAnoNavigation")
                        .WithMany("ListAnomalie")
                        .HasForeignKey("IdAno");

                    b.HasOne("ADDED.API.Models.Detaille", "IdOrdrNavigation")
                        .WithMany("ListAnomalie")
                        .HasForeignKey("IdOrdr")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Localite", b =>
                {
                    b.HasOne("ADDED.API.Models.District", "CodDistNavigation")
                        .WithMany("Localite")
                        .HasForeignKey("CodDist")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Portable", b =>
                {
                    b.HasOne("ADDED.API.Models.Releveur", "IdReleveurNavigation")
                        .WithOne("Portable")
                        .HasForeignKey("ADDED.API.Models.Portable", "IdReleveur");
                });

            modelBuilder.Entity("ADDED.API.Models.Releveur", b =>
                {
                    b.HasOne("ADDED.API.Models.Localite", "LocaliteNavigation")
                        .WithMany("Releveur")
                        .HasForeignKey("CodLocalite")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ADDED.API.Models.Tournee", b =>
                {
                    b.HasOne("ADDED.API.Models.Chef", "IdChefNavigation")
                        .WithMany("Tournee")
                        .HasForeignKey("IdChef");

                    b.HasOne("ADDED.API.Models.ChoixPlan", "IdPeriodeNavigation")
                        .WithMany("Tournee")
                        .HasForeignKey("IdPeriode");

                    b.HasOne("ADDED.API.Models.Releveur", "IdReleveurNavigation")
                        .WithMany("Tournee")
                        .HasForeignKey("IdReleveur");
                });
#pragma warning restore 612, 618
        }
    }
}
